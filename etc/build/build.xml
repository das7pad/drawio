<?xml version="1.0"?>
<project basedir="." default="all">
	
	<property file="build.properties.local" />
	<property file="build.properties" />
	<taskdef name="jscomp" classname="com.google.javascript.jscomp.ant.CompileTask" classpath="${jscompiler}" />

	<target name="noop">
		<!-- no op target -->
	</target>

	<target name="stencils.src">
		<uptodate
			property="stencils.changed"
			targetfile="${war.dir}/js/stencils.min.js"
		>
			<srcfiles dir="${war.dir}/stencils" includes="**/*.xml" />
		</uptodate>
	</target>
	<target
		name="stencils.min.js"
		depends="stencils.src"
		unless="stencils.changed"
	>
		<java fork="false" classname="Xml2Js" classpath=".">
			<arg value="../../src/main/webapp/stencils"/>
			<arg value="../../src/main/webapp/js/stencils.min.js"/>
		</java>
	</target>

	<target name="shapes.min.js">
		<jscomp
			compilationLevel="simple"
			debug="false"
			forceRecompile="true"
			output="${war.dir}/js/shapes.min.js"
		>
			<path>
				<fileset dir="${war.dir}/shapes" includes="**/*.js" />
			</path>
		</jscomp>
	</target>

	<target name="cache.manifest">
		<tstamp>
			<format property="time.stamp" pattern="MM/dd/yyyy hh:mm aa" unit="hour"/>
		</tstamp>
		<copy
			file="${basedir}/templates/cache.txt"
			tofile="${war.dir}/cache.manifest"
			overwrite="true"
		>
			<filterchain>
				<replacestring from="@DATE@" to="${time.stamp}" />
			</filterchain>
		</copy>
	</target>

	<target name="Graph-Stylesheet.js">
		<loadfile
			property="default.escaped.xml"
			srcfile="${war.dir}/styles/default.xml"
		>
			<filterchain>
				<replacestring from="'" to="\'" />
			</filterchain>
		</loadfile>
		<loadfile
			property="dark-default.escaped.xml"
			srcfile="${war.dir}/styles/dark-default.xml"
		>
			<filterchain>
				<replacestring from="'" to="\'" />
			</filterchain>
		</loadfile>
		<copy
			file="${basedir}/templates/Graph-Stylesheet.js"
			tofile="${build.dir}/Graph-Stylesheet.js"
			overwrite="true"
		>
			<filterchain>
				<replacestring
					from="@DEFAULT@"
					to="${default.escaped.xml}"
				/>
				<replacestring
					from="@DARK_DEFAULT@"
					to="${dark-default.escaped.xml}"
				/>
				<deletecharacters chars="\n\t" />
			</filterchain>
		</copy>
	</target>

	<target name="Graph-Resources.js">
		<loadfile property="dia.min.txt" srcfile="${war.dir}/resources/dia.txt">
			<filterchain>
				<tokenfilter>
					<filetokenizer/>
					<replacestring from="${line.separator}" to="\n" />
					<replacestring from="'" to="\'" />
				</tokenfilter>
			</filterchain>
		</loadfile>
		<copy
			file="${basedir}/templates/Graph-Resources.js"
			tofile="${build.dir}/Graph-Resources.js"
			overwrite="true"
		>
			<filterchain>
				<replacestring from="@DIA@" to="${dia.min.txt}" />
			</filterchain>
		</copy>
	</target>

	<target name="grapheditor.min.js">
		<jscomp compilationLevel="simple" debug="false" output="${build.dir}/grapheditor.min.js">
			<sources dir="${grapheditor.dir}">
				<file name="Editor.js" />
				<file name="EditorUi.js" />
				<file name="Sidebar.js" />
				<file name="Graph.js" />
				<file name="Format.js" />
				<file name="Shapes.js" />
				<file name="Actions.js" />
				<file name="Menus.js" />
				<file name="Toolbar.js" />
				<file name="Dialogs.js" />
			</sources>
		</jscomp>
	</target>

	<target name="sidebar.min.js">
		<jscomp compilationLevel="simple" debug="false" output="${build.dir}/sidebar.min.js">
			<sources dir="${war.dir}/js/diagramly/sidebar">
				<file name="Sidebar.js" />
				<file name="Sidebar-Advanced.js" />
				<file name="Sidebar-AlliedTelesis.js" />
				<file name="Sidebar-Android.js" />
				<file name="Sidebar-ArchiMate.js" />
				<file name="Sidebar-ArchiMate3.js" />
				<file name="Sidebar-Arrows2.js" />
				<file name="Sidebar-Atlassian.js" />
				<file name="Sidebar-AWS.js" />
				<file name="Sidebar-AWS3.js" />
				<file name="Sidebar-AWS3D.js" />
				<file name="Sidebar-AWS4.js" />
				<file name="Sidebar-AWS4b.js" />
				<file name="Sidebar-Azure.js" />
				<file name="Sidebar-Basic.js" />
				<file name="Sidebar-Bootstrap.js" />
				<file name="Sidebar-BPMN.js" />
				<file name="Sidebar-Cabinet.js" />
				<file name="Sidebar-CiscoSafe.js" />
				<file name="Sidebar-Citrix.js" />
				<file name="Sidebar-DFD.js" />
				<file name="Sidebar-EIP.js" />
				<file name="Sidebar-Electrical.js" />
				<file name="Sidebar-ER.js" />
				<file name="Sidebar-Floorplan.js" />
				<file name="Sidebar-Flowchart.js" />
				<file name="Sidebar-GCP.js" />
				<file name="Sidebar-GCP2.js" />
				<file name="Sidebar-Gmdl.js" />
				<file name="Sidebar-IBM.js" />
				<file name="Sidebar-Infographic.js" />
				<file name="Sidebar-Ios.js" />
				<file name="Sidebar-Ios7.js" />
				<file name="Sidebar-LeanMapping.js" />
				<file name="Sidebar-Mockup.js" />
				<file name="Sidebar-MSCAE.js" />
				<file name="Sidebar-Network.js" />
				<file name="Sidebar-Office.js" />
				<file name="Sidebar-PID.js" />
				<file name="Sidebar-Rack.js" />
				<file name="Sidebar-Sitemap.js" />
				<file name="Sidebar-Sysml.js" />
				<file name="Sidebar-Veeam.js" />
				<file name="Sidebar-WebIcons.js" />
			</sources>
		</jscomp>
	</target>

	<target name="client.min.js">
		<jscomp compilationLevel="simple" debug="false" output="${build.dir}/client.min.js">
			<sources dir="${war.dir}/js/deflate">
				<file name="base64.js" />
			</sources>

			<sources dir="${war.dir}/js/diagramly">
				<file name="Init.js" />
			</sources>

			<sources dir="${grapheditor.dir}">
				<file name="Init.js" />
			</sources>

			<sources dir="${basedir}/../mxgraph">
				<file name="mxClient.js" />
			</sources>
			
			<sources dir="${war.dir}/js/jscolor">
				<file name="jscolor.js" />
			</sources>
		</jscomp>
	</target>

	<target name="constants.min.js">
		<jscomp compilationLevel="simple" debug="false" output="${build.dir}/constants.min.js">
			<sources dir="${basedir}/templates">
				<file name="constants.js"/>
			</sources>
		</jscomp>
	</target>

	<target
		name="base-viewer.min.js"
		depends="
			Graph-Resources.js,
			Graph-Stylesheet.js,
			noop"
	>
		<jscomp
			compilationLevel="simple"
			forceRecompile="true"
			debug="false"
			output="${build.dir}/base-viewer.min.js"
		>
			<sources dir="${grapheditor.dir}">
				<file name="Editor.js" />
				<file name="EditorUi.js" />
				<file name="Graph.js" />
				<file name="Shapes.js" />
				<file name="Actions.js" />
			</sources>
			
			<sources dir="${war.dir}/js/diagramly">
				<file name="DrawioFile.js" />
				<file name="LocalFile.js" />
				<file name="Editor.js" />
				<file name="EditorUi.js" />
				<file name="Pages.js" />
				<file name="Trees.js" />
				<file name="Minimal.js" />
			</sources>
					
			<sources dir="${build.dir}">
				<file name="Graph-Resources.js" />
				<file name="Graph-Stylesheet.js" />
			</sources>

			<sources dir="${war.dir}/js/diagramly">
				<file name="GraphViewer.js" />
			</sources>
		</jscomp>
	</target>

	<target name="init-viewer.min.js">
		<jscomp
			compilationLevel="simple"
			forceRecompile="true"
			debug="false"
			output="${build.dir}/init-viewer.min.js"
		>
			<sources dir="${basedir}/templates">
				<file name="init-viewer.js"/>
			</sources>
		</jscomp>
	</target>

	<target
		name="viewer.min.js"
		depends="
			base-viewer.min.js,
			client.min.js,
			constants.min.js,
			init-viewer.min.js,
			noop"
	>
		<concat
			destfile="${war.dir}/js/viewer.min.js"
			fixlastline="yes"
			append="no"
		>
			<filelist dir="${build.dir}" files="constants.min.js"/>
			<filelist dir="${war.dir}/js/spin" files="spin.min.js"/>
			<filelist dir="${war.dir}/js/sanitizer" files="sanitizer.min.js"/>
			<filelist dir="${war.dir}/js/deflate" files="pako.min.js"/>
			<filelist dir="${build.dir}" files="client.min.js,base-viewer.min.js"/>
			<filelist dir="${build.dir}" files="init-viewer.min.js" />
		</concat>
	</target>

	<target name="version">
		<loadfile property="version" srcFile="../../VERSION"/>
	</target>

	<target name="extensions.min.js">
		<jscomp compilationLevel="simple" debug="false" output="${war.dir}/js/extensions.min.js">
			<sources dir="${war.dir}/js/diagramly">
				<file name="Extensions.js" />
			</sources>
			<sources dir="${war.dir}/js/diagramly/vsdx">
				<file name="VsdxExport.js" />
				<file name="mxVsdxCanvas2D.js" />
				<file name="bmpDecoder.js" />
				<file name="importer.js" />
			</sources>
			<sources dir="${war.dir}/js/diagramly/graphml">
				<file name="mxGraphMlCodec.js" />
			</sources>
		</jscomp>
		<concat destfile="${war.dir}/js/extensions.min.js" fixlastline="yes" append="yes">
			<fileset dir="${war.dir}/js/jszip" includes="**/*.min.js"/>
		</concat>
	</target>

	<target
		name="app.in.min.js"
		depends="
			Graph-Stylesheet.js,
			noop"
	>
		<jscomp compilationLevel="simple" debug="false" output="${build.dir}/app.in.min.js">
			<sources dir="${war.dir}/js/diagramly">
				<file name="DrawioFile.js" />
				<file name="LocalFile.js" />
				<file name="LocalLibrary.js" />
				<file name="StorageFile.js" />
				<file name="StorageLibrary.js" />
				<file name="UrlLibrary.js" />
				<file name="Dialogs.js" />
				<file name="Editor.js" />
				<file name="EditorUi.js" />
				<file name="DiffSync.js" />
				<file name="Settings.js" />
				<file name="DrawioFileSync.js" />
			</sources>
				
			<sources dir="${build.dir}">
				<file name="Graph-Stylesheet.js" />
			</sources>

			<sources dir="${war.dir}/js/diagramly/util">
				<file name="mxAsyncCanvas.js" />
				<file name="mxJsCanvas.js" />
			</sources>

			<sources dir="${war.dir}/js/diagramly">
				<file name="DrawioClient.js" />
				<file name="DrawioUser.js" />
				<file name="DriveFile.js" />
				<file name="DriveLibrary.js" />
				<file name="DriveClient.js" />
				<file name="DropboxFile.js" />
				<file name="DropboxLibrary.js" />
				<file name="DropboxClient.js" />
				<file name="OneDriveFile.js" />
				<file name="OneDriveLibrary.js" />
				<file name="OneDriveClient.js" />
				<file name="GitHubFile.js" />
				<file name="GitHubLibrary.js" />
				<file name="GitHubClient.js" />
				<file name="TrelloFile.js" />
				<file name="TrelloLibrary.js" />
				<file name="TrelloClient.js" />
			</sources>
			
			<sources dir="${war.dir}/js/diagramly">
				<file name="App.js" />
				<file name="Menus.js" />
				<file name="Pages.js" />
				<file name="Trees.js" />
				<file name="Minimal.js" />
				<file name="DistanceGuides.js" />
			</sources>
		</jscomp>
	</target>

	<target
		name="app.min.js"
		depends="
			app.in.min.js,
			client.min.js,
			grapheditor.min.js,
			sidebar.min.js,
			version,
			noop"
	>
		<concat destfile="${war.dir}/js/app.min.js" fixlastline="yes" append="no">
			<filelist dir="${war.dir}/js/spin" files="spin.min.js"/>
			<filelist dir="${war.dir}/js/sanitizer" files="sanitizer.min.js"/>
			<filelist dir="${war.dir}/js/cryptojs" files="aes.min.js"/>
			<filelist dir="${war.dir}/js/deflate" files="pako.min.js"/>
			<filelist dir="${build.dir}" files="client.min.js,grapheditor.min.js,sidebar.min.js,app.in.min.js"/>
		</concat>

		<replace file="${war.dir}/js/app.min.js" token="@DRAWIO-VERSION@" value="${version}"/>
	</target>

	<target
		name="app"
		depends="
			app.min.js,
			cache.manifest,
			extensions.min.js,
			shapes.min.js,
			stencils.min.js,
			viewer.min.js,
			noop"
	>
	</target>

	<target name="all" depends="app">
	</target>

	<!-- ================== Stand-alone war creation ============================= -->

	<path id="javac.class.path">
		<fileset dir="${war.dir}/WEB-INF/lib" />
	</path>

	<target name="javac" description="Java compilation">
		<mkdir dir="${javac.dir}"/>
		<javac includeantruntime="false" srcdir="${src.dir}" excludes="**/EmbedServlet2.java" destdir="${javac.dir}">
			<classpath refid="javac.class.path" />
		</javac>
		<copy todir="${javac.dir}" file="${src.dir}/log4j.properties" />
	</target>

	<target name="clean" description="Cleans build directories">
		<delete failonerror="false">
			<fileset dir="${javac.dir}">
			</fileset>
			<fileset dir="${build.dir}">
			</fileset>
		</delete>
	</target>

	<target
		name="war"
		depends="
			app,
			javac,
			noop"
		description="Create the stand-alone war file"
	>
		<zip destfile="${build.dir}/${war.name}" basedir="${war.dir}" >
		</zip>
	</target>

</project>
